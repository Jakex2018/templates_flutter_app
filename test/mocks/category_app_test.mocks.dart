// Mocks generated by Mockito 5.4.4 from annotations
// in templates_flutter_app/test/unit/views/category_app_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:connectivity_plus/connectivity_plus.dart';
import 'package:mockito/mockito.dart';
import 'package:templates_flutter_app/controllers/category_controller.dart';

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CategoryController].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryController extends Mock implements CategoryController {
  @override
  Stream<ConnectivityResult> get connectivityStream => super.noSuchMethod(
        Invocation.getter(#connectivityStream),
        returnValue:
            Stream.value(ConnectivityResult.wifi), // Simulate WiFi connectivity
      ) as Stream<ConnectivityResult>;

  @override
  Stream<QuerySnapshot<Map<String, dynamic>>> getTemplatesByCategory(
          String category) =>
      super.noSuchMethod(
        Invocation.method(#getTemplatesByCategory, [category]),
        returnValue:
            Stream.value(MockQuerySnapshot()), // Return a mock QuerySnapshot
      ) as Stream<QuerySnapshot<Map<String, dynamic>>>;

  @override
  int get itemsPerPage => super.noSuchMethod(
        Invocation.getter(#itemsPerPage),
        returnValue: 10, // Default value
      ) as int;

  @override
  int get currentPage => super.noSuchMethod(
        Invocation.getter(#currentPage),
        returnValue: 0, // Default value
      ) as int;

  @override
  set currentPage(int value) => super.noSuchMethod(
        Invocation.setter(#currentPage, value),
      );

  @override
  void changePage(int index) => super.noSuchMethod(
        Invocation.method(#changePage, [index]),
      );
}

/// A class which mocks [QuerySnapshot].
///
/// See the documentation for Mockito's code generation for more information.

class MockQuerySnapshot extends Mock
    implements QuerySnapshot<Map<String, dynamic>> {
  @override
  List<QueryDocumentSnapshot<Map<String, dynamic>>> get docs => [
        MockDocumentSnapshot(),
        MockDocumentSnapshot(), // Add more if needed
      ];
}

/// A class which mocks [DocumentSnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockDocumentSnapshot extends Mock
    implements QueryDocumentSnapshot<Map<String, dynamic>> {
  @override
  Map<String, dynamic> data() => {
        'image': 'https://example.com/image.jpg',
        'title': 'Mock Title', // Add more fields if needed
        'description': 'Mock Description',
      };
}
