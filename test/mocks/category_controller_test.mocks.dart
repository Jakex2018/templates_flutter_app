// Mocks generated by Mockito 5.4.4 from annotations
// in templates_flutter_app/test/unit/controllers/category_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i5;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:connectivity_plus/connectivity_plus.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:templates_flutter_app/services/connectivity_services.dart'
    as _i6;
import 'package:templates_flutter_app/services/template_data_services.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDocumentReference_0<T1 extends Object?> extends _i1.SmartFake
    implements _i2.DocumentReference<T1> {
  _FakeDocumentReference_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSnapshotMetadata_1 extends _i1.SmartFake
    implements _i2.SnapshotMetadata {
  _FakeSnapshotMetadata_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TemplateDataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTemplateDataService extends _i1.Mock
    implements _i3.TemplateDataService {
  MockTemplateDataService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i2.QuerySnapshot<Map<String, dynamic>>> getTemplatesByCategory(
          String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTemplatesByCategory,
          [category],
        ),
        returnValue:
            _i4.Stream<_i2.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i4.Stream<_i2.QuerySnapshot<Map<String, dynamic>>>);

  @override
  _i4.Future<void> getData(
    _i3.TemplateDataService? dataService,
    String? image,
    Function? setState,
    String? name,
    String? urlRepository,
    String? nameImage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [
            dataService,
            image,
            setState,
            name,
            urlRepository,
            nameImage,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String?> accessDemo(String? image) => (super.noSuchMethod(
        Invocation.method(
          #accessDemo,
          [image],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<String?> fetchGetNameImage(String? image) => (super.noSuchMethod(
        Invocation.method(
          #fetchGetNameImage,
          [image],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<void> fetchDownloadImage(String? url) => (super.noSuchMethod(
        Invocation.method(
          #fetchDownloadImage,
          [url],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> saveImageToGallery(_i5.File? image) => (super.noSuchMethod(
        Invocation.method(
          #saveImageToGallery,
          [image],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String?> fetchNameTemplate(String? image) => (super.noSuchMethod(
        Invocation.method(
          #fetchNameTemplate,
          [image],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<String?> fetchUrlTemplate(String? image) => (super.noSuchMethod(
        Invocation.method(
          #fetchUrlTemplate,
          [image],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<void> fetchSaveUrlTemplate(String? url) => (super.noSuchMethod(
        Invocation.method(
          #fetchSaveUrlTemplate,
          [url],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [ConnectivityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityService extends _i1.Mock
    implements _i6.ConnectivityService {
  MockConnectivityService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i7.ConnectivityResult> get connectivityStream =>
      (super.noSuchMethod(
        Invocation.getter(#connectivityStream),
        returnValue: _i4.Stream<_i7.ConnectivityResult>.empty(),
      ) as _i4.Stream<_i7.ConnectivityResult>);
}

/// A class which mocks [DocumentSnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockDocumentSnapshot<T extends Object?> extends _i1.Mock
    implements _i2.DocumentSnapshot<T> {
  MockDocumentSnapshot() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i2.DocumentReference<T> get reference => (super.noSuchMethod(
        Invocation.getter(#reference),
        returnValue: _FakeDocumentReference_0<T>(
          this,
          Invocation.getter(#reference),
        ),
      ) as _i2.DocumentReference<T>);

  @override
  _i2.SnapshotMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeSnapshotMetadata_1(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i2.SnapshotMetadata);

  @override
  bool get exists => (super.noSuchMethod(
        Invocation.getter(#exists),
        returnValue: false,
      ) as bool);

  @override
  dynamic get(Object? field) => super.noSuchMethod(Invocation.method(
        #get,
        [field],
      ));

  @override
  dynamic operator [](Object? field) => super.noSuchMethod(Invocation.method(
        #[],
        [field],
      ));
}

/// A class which mocks [QuerySnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuerySnapshot<T extends Object?> extends _i1.Mock
    implements _i2.QuerySnapshot<T> {
  MockQuerySnapshot() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i2.QueryDocumentSnapshot<T>> get docs => (super.noSuchMethod(
        Invocation.getter(#docs),
        returnValue: <_i2.QueryDocumentSnapshot<T>>[],
      ) as List<_i2.QueryDocumentSnapshot<T>>);

  @override
  List<_i2.DocumentChange<T>> get docChanges => (super.noSuchMethod(
        Invocation.getter(#docChanges),
        returnValue: <_i2.DocumentChange<T>>[],
      ) as List<_i2.DocumentChange<T>>);

  @override
  _i2.SnapshotMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeSnapshotMetadata_1(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i2.SnapshotMetadata);

  @override
  int get size => (super.noSuchMethod(
        Invocation.getter(#size),
        returnValue: 0,
      ) as int);
}
